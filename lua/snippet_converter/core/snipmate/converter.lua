local NodeType = require("snippet_converter.core.node_type")
local base_converter = require("snippet_converter.core.converter")
local io = require("snippet_converter.utils.io")
local export_utils = require("snippet_converter.utils.export_utils")

local M = {}

M.convert = function(snippet, _)
  local description = ""
  if snippet.description then
    description = " " .. snippet.description
  end
  local body = base_converter.convert_ast(snippet.body, base_converter.visit_node(nil))
  -- Prepend a tab to every non-'\n' line
  body = body:gsub("[^\n]+", "\t%1")
  return string.format("snippet %s%s\n%s", snippet.trigger, description, body)
end

local HEADER_STRING =
  "# Generated by snippet-converter.nvim (https://github.com/smjonas/snippet-converter.nvim)"

-- Takes a list of converted snippets for a particular filetype,
-- separates them by newlines and exports them to a file.
-- @param converted_snippets string[] @A list of strings where each item is a snippet string to be exported
-- @param filetype string @The filetype of the snippets
-- @param output_dir string @The absolute path to the directory (or file) to write the snippets to
M.export = function(converted_snippets, filetype, output_path)
  local snippet_lines = export_utils.snippet_strings_to_lines(
    converted_snippets,
    "\n",
    { HEADER_STRING },
    nil
  )
  output_path = export_utils.get_output_file_path(output_path, filetype, "snippets")
  io.write_file(snippet_lines, output_path)
end

return M
